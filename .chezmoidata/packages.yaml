packages:
  linux:
    shellscripts:
      - name: prepare
        steps:
          - mkdir -p $HOME/.local/bin
          - mkdir -p $HOME/.local/share
      - name: zplug
        steps:
          - curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
      - name: kubectl
        steps:
          - KUBECTL_VERSION=v1.31.0
          - folder=$(mktemp -d)
          - cd $folder
          - curl -Lo kubectl "https://dl.k8s.io/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl"
          - chmod a+x kubectl
          - cp kubectl $HOME/.local/bin/kubectl
      - name: helm
        steps:
          - folder=$(mktemp -d)
          - cd $folder
          - curl -fsSL -o get_helm.sh "https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3"
          - chmod 700 get_helm.sh
          - ./get_helm.sh
      - name: krew
        steps:
          - | 
              (
                set -x; cd "$(mktemp -d)" &&
                OS="$(uname | tr '[:upper:]' '[:lower:]')" &&
                ARCH="$(uname -m | sed -e 's/x86_64/amd64/' -e 's/\(arm\)\(64\)\?.*/\1\2/' -e 's/aarch64$/arm64/')" &&
                KREW="krew-${OS}_${ARCH}" &&
                curl -fsSLO "https://github.com/kubernetes-sigs/krew/releases/latest/download/${KREW}.tar.gz" &&
                tar zxvf "${KREW}.tar.gz" &&
                ./"${KREW}" install krew
              )
      - name:
        steps:
          - folder=$(mktemp -d)
          - cd $folder
          - K9S_VERSION=v0.32.7
          - curl -Lo k9s.tar.gz "https://github.com/derailed/k9s/releases/download/$K9S_VERSION/k9s_Linux_amd64.tar.gz"
          - tar xvzf k9s.tar.gz
          - cp k9s ~/.local/bin/k9s
      - name: odin
        steps:
          - ODIN_VERSION=dev-2025-01
          - folder=$(mktemp -d)
          - cd $folder
          - curl -Lo odin.zip "https://github.com/odin-lang/Odin/releases/download/$ODIN_VERSION/odin-ubuntu-amd64-$ODIN_VERSION.zip"
          - unzip odin.zip
          - mkdir output
          - tar xvzf dist.tar.gz -C output --strip-components=1
          - rm -rf $HOME/.local/bin/odinlang
          - cp -r output $HOME/.local/bin/odinlang
      - name: golang
        steps:
          - GO_VERSION=1.23.4
          - folder=$(mktemp -d)
          - cd $folder
          - mkdir -p $HOME/.local/go
          - curl -Lo go.tar.gz "https://go.dev/dl/go$GO_VERSION.linux-amd64.tar.gz"
          - tar -C $HOME/.local/go -xzf go.tar.gz --strip-components=1
      - name: rust
        steps:
          - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          - rustup update
    rustSrc:
      - eza
    goSrc:
      - sigs.k8s.io/kind@v0.26.0
      - github.com/air-verse/air@latest
      - github.com/rakyll/hey@latest
      - github.com/go-delve/delve/cmd/dlv@latest
      - github.com/git-town/git-town@latest
      - github.com/cli/cli/cmd/gh@latest
    krew: 
      - mc
      - get-all
      - view-secret
    apt: []
    dnf: []
    flatpak: []
    # packages that have the same name in all package managers
    common:
      - unzip
      - openssl
      - make
      - cmake
      - autojump
      - ripgrep
      - git
      - gcc
      - curl
      - ddd
      - neovim
      - tmux
      - fzf
      - bat
      - bashtop
