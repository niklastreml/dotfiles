# zsh-newuser-install
export LANG=C.UTF-8

sourceIfExists () {
	test -f $1 && source $1
}
sourceIfExists $HOME/.env



HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
export EDITOR=nvim

export GOBIN=$HOME/.local/bin
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:$HOME/scripts
export PATH=$PATH:$HOME/.local/bin
export PATH=$PATH:/usr/local/go/bin
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
eval "$(fzf --zsh)"

# This should error if the file does not exist
source $ZPLUG_HOME/init.zsh

unsetopt beep extendedglob nomatch
bindkey -e

bindkey "^[[1;5C" forward-word
bindkey "^[[1;5D" backward-word
bindkey "^H" backward-kill-word
bindkey "5~" kill-word
bindkey "^[[3~" delete-char
# end zsh-newuser-install

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.

  
sourceIfExists "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
sourceIfExists "$HOME/.sdkman/bin/sdkman-init.sh"


zplug "plugins/autojump",   from:oh-my-zsh
zplug "plugins/git",   from:oh-my-zsh
zplug "plugins/kubectl",   from:oh-my-zsh
zplug "plugins/helm",   from:oh-my-zsh
zplug "plugins/command-not-found",   from:oh-my-zsh
zplug "plugins/docker",   from:oh-my-zsh
zplug "plugins/docker-compose",   from:oh-my-zsh
zplug "plugins/dotenv",   from:oh-my-zsh
zplug "plugins/jsontools",   from:oh-my-zsh
zplug "plugins/asdf",   from:oh-my-zsh
zplug "plugins/fzf",   from:oh-my-zsh
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "zsh-users/zsh-completions", defer:2
zplug reegnz/jq-zsh-plugin
zplug "Aloxaf/fzf-tab"

zplug romkatv/powerlevel10k, as:theme, depth:1

source <(kubectl completion zsh)
source <(helm completion zsh)
source <(gh completion -s zsh)
source "$HOME/.cargo/env"


if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
  # exec tmux
fi

enable-fzf-tab

if  command -v eza &> /dev/null
then
		alias ls='eza'
		alias ll='eza -lah --icons'
		alias tree='eza -lah --icons --tree'
fi

if  command -v docker &> /dev/null
then
		alias dive="docker run -ti --rm  -v /var/run/docker.sock:/var/run/docker.sock wagoodman/dive"
fi
if  command -v nvim &> /dev/null
then
		alias vim='nvim'
fi

alias gdt='git difftool'


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
sourceIfExists $HOME/.p10k.zsh


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end


#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="$HOME/.sdkman"
[[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"
